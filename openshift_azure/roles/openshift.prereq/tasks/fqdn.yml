# file: roles/openshift.prereq/tasks/fqdn.yml
---

- name: Update system hostname
  ansible.builtin.replace:
    dest: /etc/hostname
    regexp: '.*'
    replace: '{{ inventory_hostname }}'
    backup: yes
  register: hostname_replace

- name: Set hosts FQDN
  ansible.builtin.lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: '127.0.0.1   {{ inventory_hostname }} localhost localhost.localdomain localhost4 localhost4.localdomain4'

- name: Set system hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Read system hostname
  ansible.builtin.shell: hostname -F /etc/hostname
  changed_when: False

# [TODO]: Replace EC2 facts with ansible IPv4.

- name: Gather EC2 facts for host
  action: ec2_facts
  register: ec2_facts

- name: Append EC2 host public ipv4 to hosts file
  ansible.builtin.shell: "echo -e '{{ ec2_facts.ansible_facts.ansible_ec2_public_ipv4 }} {{ inventory_hostname }}' | tee --append /etc/hosts > /dev/null"

- name: Append entry to hosts file
  ansible.builtin.lineinfile: "dest=/etc/hosts state=present insertafter=EOF line={{ item }}"
  with_items: "{{ etc_hosts }}"

- name: Reboot the host
  ansible.builtin.shell: sleep 2 && shutdown -r now "Ansible updates triggered"
  async: 1
  poll: 0
  become: True
  ignore_errors: True
  when: hostname_replace.changed

# - name: Waiting for host to come back
#   local_action: wait_for host={{ inventory_hostname }} state=started delay=30 timeout=300
#   become: false
#   when: hostname_replace.changed

- name: Wait for nodes to come back 
  ansible.builtin.pause: 
    minutes: 2