# file: 2_load.yml
---
# https://www.terraform.io/docs/providers/aws/index.html

- name: Wait for AWS AMIs to become initialized
  hosts: localhost
  gather_facts: no
  tasks:
    - ansible.builtin.wait_for:
        host: "{{ item }}"
        port: 22
        state: started
        timeout: 300
      with_items:
        - "{{ groups.rhel_nodes }}"

- name: Set system_user password
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  tasks:
    - ansible.builtin.user:
        name:      "{{ system_user }}"
        password:  "{{ workshop_password |password_hash('sha512') }}"
        state:     present
        append:    yes
  tags: password

- name: Configure epel on nodes
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  roles:
    - role: epel

- name: Configure subscriptions
  become: yes
  remote_user: ec2-user
  hosts:
    - rhel_nodes
  gather_facts: no
  roles:
    - role: subscription_manager 
  tags: rhsm

- name: Configure repositories on nodes
  become: yes
  remote_user: ec2-user
  hosts: le_node
  gather_facts: no
  roles:
    - role: LetsEncrypt
  tags: repositories

- name: Configure software on nodes
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  gather_facts: yes
  roles:
    - role: ansible
    - role: cockpit
    - role: powerline
    - role: upgrade
  tags: software

- name: Install required files for the workshop
  become: yes
  remote_user: ec2-user
  hosts: rhel_nodes
  tasks:
    - name: Install required packages
      ansible.builtin.package:
        name: "{{ item }}"
        state: latest
      loop:
      - ansible-core
      - git

    - name: Install a test SELinux log
      ansible.builtin.copy:
        src: testaudit
        dest: /root/testaudit
        mode: 0600
        setype: _default

    - name: Remove unneeded file
      ansible.builtin.file:
        path: /usr/share/selinux/devel/include/services/container.if
        state: absent

    - name: stage real cert for tower
      ansible.builtin.copy:
        dest: "~ec2-user/cert.pem"
        src: "{{ deploy_working_dir }}/{{ workshop_prefix }}.{{ domain_name }}_cert.pem"
        owner: "ec2-user"
        group: "ec2-user"
        mode: "0644"

    - name: stage real key for tower
      ansible.builtin.copy:
        dest: "~ec2-user/key.pem"
        src: "{{ deploy_working_dir }}/{{ workshop_prefix }}.{{ domain_name }}_key.pem"
        owner: "ec2-user"
        group: "ec2-user"
        mode: "0644"

    - name: install real certificate to web console
      ansible.builtin.copy:
        dest: "/etc/cockpit/ws-certs.d/acme.cert"
        src: "{{ deploy_working_dir + '/' + workshop_prefix + '.' + domain_name + '_cert.pem' }}"
        owner: "root"
        group: "cockpit-wsinstance"

    - name: install real private key to web console
      ansible.builtin.copy:
        dest: "/etc/cockpit/ws-certs.d/acme.key"
        src: "{{ deploy_working_dir + '/' + workshop_prefix + '.' + domain_name + '_key.pem' }}"
        owner: "root"
        group: "cockpit-wsinstance"

    - name: restart web console
      ansible.builtin.systemd:
        name: "cockpit"
        state: restarted
  tags: install

...
