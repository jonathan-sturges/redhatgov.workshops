---
# tasks file for roles/scan

#===============================================================================
#  Search and record IDs
#===============================================================================

- name: Announce days setting
  ansible.builtin.debug:
    msg: "[ {{ ec2_region }} ] Scanning for running instances up for {{ days }} or more days."

- name: Announce mail setting
  ansible.builtin.debug:
    msg: "Sending email with the results."
  when: mail

- name: Announce stop setting
  ansible.builtin.debug:
    msg: "Stopping instances running for {{ days }} or more days."
  when: stop

- name: Initialize an empty list for our strings
  ansible.builtin.set_fact:
    html_dest: "{{ deploy_working_dir }}/hosts-{{ ec2_region }}.html"
    text_dest: "{{ deploy_working_dir }}/hosts-{{ ec2_region }}"
    instance_ids: []

- name: lookup running RHEL instances
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: "running"
  register: ec2

- name: Append instance ids to list if the instance is older than one week
  ansible.builtin.set_fact:
    instance_ids: "{{ instance_ids }} + [ '{{ item.instance_id }}' ]"
  when: "(ansible_date_time.iso8601[:19] | to_datetime('%Y-%m-%dT%H:%M:%S') - item.launch_time[:19] | to_datetime('%Y-%m-%dT%H:%M:%S')).days > days"
  with_items: "{{ ec2.instances }}"
  no_log: True

- name: Make deployment working directory
  ansible.builtin.file:
    path: "{{ deploy_working_dir }}"
    state: directory

- name: Text instance report
  ansible.builtin.template:
    src: "instances.j2"
    dest: "{{ text_dest }}"

- name: HTML instance report
  ansible.builtin.template:
    src: "instances-html.j2"
    dest: "{{ html_dest }}"

- name: CSV instance report
  ansible.builtin.template:
    src: "instances-csv.j2"
    dest: "{{ deploy_working_dir }}/hosts-{{ ec2_region }}.csv"

- ansible.builtin.debug:
    msg: "There are {{ instance_ids|length }} instances still up {{ days }} or more days."

- name: Send e-mail
  community.general.mail:
    host: localhost
    port: 25
    to: "{{ email }}"
    subject: "AWS EC2 {{ ec2_region }}: Instances Running {{ days }} Days+"
    body: "<pre>{{ lookup('file', html_dest ) }}</pre>"
    attach: "{{ deploy_working_dir }}/hosts-{{ ec2_region }}.csv"
    subtype: "html"
  when: mail and instance_ids|length > 0

- name: Stop instances
  ec2:
    state: 'stopped'
    instance_ids: '{{ instance_ids }}'
  when: stop and instance_ids|length > 0

...
