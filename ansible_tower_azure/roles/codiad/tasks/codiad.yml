---
# tasks file for codiad

- name: Install Codiad package dependencies
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ codiad_pkgs }}"

- name: Get list of users
  ansible.builtin.getent:
    database: passwd
  register: gp

- name: Add Codiad users to nginx group
  ansible.builtin.user:
    name: "{{ item.name }}"
    append: yes
    groups:
    - nginx
  with_items:
  - "{{ codiad_users }}"
  when: item.name in gp.ansible_facts.getent_passwd

- name: Configure nginx to listen on port 8443 only
  ansible.builtin.template:
    backup: true
    dest: "/etc/nginx/{{ item.dest }}"
    src: "{{ item.src }}"
  with_items:
  - { src: "codiad.conf.j2", dest: "conf.d/codiad.conf" }
  - { src: "nginx.conf.j2", dest: "nginx.conf" }

- name: Check to see if firewalld is enabled
  ansible.builtin.command: systemctl is-enabled firewalld
  register: sif_result
  ignore_errors: True

- name: Open firewall ports
  ansible.posix.firewalld:
    immediate: true
    permanent: true
    port: "{{ codiad_port }}/tcp"
    state: enabled
  when: sif_result.rc == 0

- name: Create nginx cert storage
  ansible.builtin.file:
    state: directory
    dest: "/etc/pki/nginx/private"
    group:   "nginx"
    owner:   "nginx"
    mode:    0750

- name: Create nginx html directory
  ansible.builtin.file:
    state: directory
    dest: "{{ codiad_dir }}"
    group:   "root"
    owner:   "root"
    mode:    0755
    setype: "httpd_sys_rw_content_t"

- name: Copy certs to nginx storage
  ansible.builtin.copy:
    remote_src: yes
    dest: "/etc/pki/nginx/{{ item.dest }}"
    src: "{{ item.src }}"
    group:   "nginx"
    owner:   "nginx"
    mode:    0440
  with_items:
  - { src: "{{ codiad_ssl_cert_src_file }}", dest: "{{ codiad_ssl_cert_file }}" }
  - { src: "{{ codiad_ssl_key_src_file }}", dest: "private/{{ codiad_ssl_key_file }}" }

- name: Clone Codiad from GitHub
  ansible.builtin.git:
    clone: yes
    repo: "https://github.com/Codiad/Codiad"
    dest: "{{ codiad_dir }}"
    force: yes
    version: "{{ codiad_version }}"

- name: Set ownership and SELinux context on Codiad
  ansible.builtin.file:
    dest: "{{ item }}"
    state: directory
    recurse: yes
    group: nginx
    owner: nginx
    setype: "httpd_sys_rw_content_t"
  with_items:
  - "{{ codiad_dir }}/data"
  - "{{ codiad_dir }}/plugins"
  - "{{ codiad_dir }}/themes"
  - "{{ codiad_dir }}/workspace"
  - "{{ codiad_dir }}/workspace/default"

- name: Configure PHP CGI
  ansible.builtin.replace:
    dest: "/etc/php.ini"
    regexp: "^;cgi.fix_pathinfo=1"
    replace: "cgi.fix_pathinfo=0"

- name: Configure PHP FPM
  ansible.builtin.replace:
    dest: "/etc/php-fpm.d/www.conf"
    regexp: "{{ item.src }}"
    replace: "{{ item.dest }}"
  with_items:
  - { src: "^listen =.*", dest: "listen = /var/run/php-fpm/php-fpm.sock" }
  - { src: "^;listen.owner =.*", dest: "listen.owner = nobody" }
  - { src: "^;listen.group =.*", dest: "listen.group = nobody" }
  - { src: "^user =.*", dest: "user = nginx" }
  - { src: "^group =.*", dest: "group = nginx" }

- name: Set permissions on Codiad workspace
  ansible.builtin.file:
    dest: "{{ codiad_dir }}/workspace"
    mode: "g+sw"
    recurse: yes

- name: Set permissions on PHP sessions
  ansible.builtin.file:
    dest: "/var/lib/php/session"
    group: "nginx"

- name: Configure Codiad defaults
  ansible.builtin.template:
    src: "config.php.j2"
    dest: "{{ codiad_dir }}/config.php"
    group: "nginx"
    owner: "nginx"
    mode:  0640
    setype: "httpd_sys_rw_content_t"

- name: Configure Codiad data
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ codiad_dir }}/data/{{ item }}"
    group: "nginx"
    owner: "nginx"
    mode:  0640
    setype: "httpd_sys_rw_content_t"
  with_items:
  - "active.php"
  - "extensions.php"
  - "projects.php"
  - "settings.php"
  - "users.php"

- name: Start and enable nginx and php-fpm
  ansible.builtin.service:
    enabled: yes
    name: "{{ item }}"
    state: restarted
  with_items:
  - php-fpm
  - nginx
...
