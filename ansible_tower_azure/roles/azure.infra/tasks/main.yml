---
#---------------------------------------------------
#  Azure Hosts Creation
#---------------------------------------------------
- name: Template Ansible Hosts File
  ansible.builtin.template: dest="{{ inventory_working_dir }}/hosts"  src=hosts.j2
  tags:
    - tf_create
#---------------------------------------------------
#  Azure INI Creation
#---------------------------------------------------
- name: Template Azure INI File
  ansible.builtin.template: dest="{{ inventory_working_dir }}/Azure.ini"  src=azure.ini.j2
  tags:
    - tf_create
#---------------------------------------------------
#  SSH Key
#---------------------------------------------------
- name: Create directory for SSH keys
  ansible.builtin.file:
    path: "~/.ssh/ansible/"
    state: directory
    mode: 0755

- name: Create working directory
  ansible.builtin.file:
    path: "{{ terraform_working_dir }}"
    state: directory
    mode: 0755

- name: ensure SSH key is removed
  ansible.builtin.file:
    path: "~/.ssh/ansible/{{ item }}"
    state: absent
  with_items:
    - id_rsa
    - id_rsa.pub

- name: ensure SSH key is generated
  ansible.builtin.command: ssh-keygen -b 2048 -t rsa -f ~/.ssh/ansible/id_rsa -N ''
  register: azure_key
  args:
    creates: ~/.ssh/asnible/id_rsa

- name: Remove old keypair
  ansible.builtin.file:
    state: absent
    path: "{{ terraform_working_dir }}/{{ workshop_prefix }}-tower"

- name: Create ssh keypair
  ansible.builtin.copy: src=~/.ssh/ansible/id_rsa
        dest="{{ terraform_working_dir }}/{{ workshop_prefix }}-tower"
        mode=0400
  tags:
    - tf_create
#---------------------------------------------------
# Terraform.io
#---------------------------------------------------
- name: Make temporary location to run Terraform
  ansible.builtin.file: path="{{ terraform_working_dir }}"  state=directory
  tags:
    - tf_create

- name: Template Terraform files locally to run
  ansible.builtin.template: dest="{{ terraform_working_dir }}/azure.tf"  src=azure.tf.j2
  tags:
    - tf_create

- name: Template terraform.tfvars
  ansible.builtin.template: dest="{{ terraform_working_dir }}/terraform.tfvars"  src=terraform.tfvars.j2
  tags:
    - tf_create

- name: Check Terraform version
  ansible.builtin.shell: terraform version
  register: tf
  changed_when: false

- ansible.builtin.set_fact:
    tf_version: "{{ tf.stdout_lines[0] | regex_replace('^Terraform.*v') }}"

- name: Initialize Terraform to discover plugins
  ansible.builtin.command: terraform init
  args:
    chdir: "{{ terraform_working_dir }}"
#  when: tf_version | version_compare('0.10.0', '>=')
  when: tf_version is version_compare('0.10.0', '>=')
  tags:
    - tf_create

- name: Run Terraform ( < 0.11.0 )
  ansible.builtin.command: terraform apply
  args:
    chdir: "{{ terraform_working_dir }}"
  when: tf_version is version_compare('0.11.0', '<')
  tags:
    - tf_create

- name: Run Terraform ( >= 0.11.0 )
  ansible.builtin.command: terraform apply -auto-approve
  args:
    chdir: "{{ terraform_working_dir }}"
  when: tf_version is version_compare('0.11.0', '>=')
  tags:
    - tf_create
